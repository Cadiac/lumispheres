~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Entry name: Lumispheres                                                      |
| Party: Instanssi 2019                                                        |
| Compo: Pikkiriikkinen demo (4K)                                              |
| Code & Music: Cadiac                                                         |
| Tools used:                                                                  |
| - JavaScript                                                                 |
| - WebGL                                                                      |
| - SoundBox (https://gitlab.com/mbitsnbites/soundbox)                         |
| - Shader Minifier (http://www.ctrl-alt-test.fr)                              |
| - UglifyJS (https://github.com/mishoo/UglifyJS)                              |
| - Brotli (https://github.com/google/brotli)                                  |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First released at Instanssi 2024.
Source code can be found from https://github.com/Cadiac/lumispheres.
This has been tested on MacOS Safari & Google Chrome, but at least it was
working on windows earlier as well..

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

How to run:

Brotli version (4083 bytes):
Start the provided minimal python server up with

$ python3 server.py

and open http://localhost:8000 on the browser.

Click to start the demo. It should enter full screen and start
running after a 2 second delay.

All the server does is it hosts the entry and sets "Content-Encoding: br"
header to the file it serves. This enables the browser to correctly decompress
the entry file it receives and interpret it as a HTML file.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

PNG Version (4604 bytes):
Tool used: PnginatorModified
(https://gitlab.com/tmptknn/pipeline/-/blob/main/tools/pnginator_modified.rb)

Open index.png.html in Chrome or Safari with the CORS-security settings disabled

On windows, for example:

"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
    --disable-web-security --user-data-dir=[some directory]

Or host the file from a local server, for instance with the provided python server:

$ python3 server.py

and open http://localhost:8000/index.png.html on the browser. This bypasses
the need for CORS-security settings override.

Click to start the demo. It should automatically enter full screen mode and
start after 2 second delay, and exit it once the demo is complete.

